name: test-release

# publish to test.pypi.org on merge to default branch

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  test-publish-main:
    environment: test-release  # match name in test.PyPI.org OIDC
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to create a release
      id-token: write  # Required for connecttion to pypi OIDC
    steps:
      - name: checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: setup rye
        uses: eifinger/setup-rye@v3
      - name: set python version
        run: rye pin "3.12"
      - name: create GH release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git fetch --tags
          latest_tag_version=$(git describe --tags --abbrev=0)
          echo "Found release ${latest_tag_version} as previous git tag"
          version=$(echo $latest_tag_version | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
          echo "Create release ${version} for ${GITHUB_REPOSITORY} in GitHub"
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${GITHUB_REPOSITORY}/releases \
            -f tag_name=$version \
            -f name="v$version" \
            -F draft=false \
            -F prerelease=false \
            -F generate_release_notes=true
          git fetch --tags
          echo "Latest release is now $(git describe --tags --abbrev=0)"
          git status
      - name: build package
        run: |
          python -V
          . .venv/bin/activate
          pip install build
          python -m build
      - name: publish to test.pypi.org
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
